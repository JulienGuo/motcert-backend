# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: "gitlab.chainnova.com:7998/BaseLayer/motcert-backend"
  GOPATH: "/opt/gopath"
  CI_PROJECT_DIR: "~"

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/gitlab.chainnova.com
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/gitlab.chainnova.com
  - cd $GOPATH/src/gitlab.chainnova.com

stages:
    - test
    - build

format:
    stage: test
    script:
      - git clone ssh://git@gitlab.chainnova.com:7998/BaseLayer/motcert-backend.git
      - ls -la
      - cd motcert-backend/app
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - go test -race $(go list ./... | grep -v /vendor/)

compile:
    stage: build
    script:
      - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/mybinary
    artifacts:
      paths:
        - mybinary
